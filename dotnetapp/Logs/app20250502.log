<<<<<<< HEAD
2025-05-02 03:42:46.996 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 03:42:47.031 +00:00 [INF] Creating key {e8663963-098e-49e4-bc10-f50e5367dba7} with creation date 2025-05-02 03:42:47Z, activation date 2025-05-02 03:42:47Z, and expiration date 2025-07-31 03:42:47Z.
2025-05-02 03:42:47.041 +00:00 [WRN] No XML encryptor configured. Key {e8663963-098e-49e4-bc10-f50e5367dba7} may be persisted to storage in unencrypted form.
2025-05-02 03:42:47.043 +00:00 [INF] Writing data to file '/home/coder/.aspnet/DataProtection-Keys/key-e8663963-098e-49e4-bc10-f50e5367dba7.xml'.
2025-05-02 03:42:47.092 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 03:42:47.095 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 03:42:47.096 +00:00 [INF] Hosting environment: Development
2025-05-02 03:42:47.096 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 03:45:29.185 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - -
2025-05-02 03:45:29.230 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 03:45:29.414 +00:00 [ERR] HTTP GET / responded 500 in 185.1167 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:45:29.429 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:45:29.455 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - - - 500 - text/html;+charset=utf-8 273.6974ms
2025-05-02 03:45:30.250 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - -
2025-05-02 03:45:30.251 +00:00 [ERR] HTTP GET /favicon.ico responded 500 in 0.4361 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:45:30.251 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:45:30.254 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - - - 500 - text/plain;+charset=utf-8 3.7499ms
2025-05-02 03:46:38.544 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 03:46:38.645 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 101.0341ms
2025-05-02 03:46:39.224 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 03:46:39.294 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 70.1268ms
2025-05-02 03:46:40.377 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 03:46:40.378 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 0.7920ms
2025-05-02 03:46:40.943 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 03:46:40.947 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 4.0913ms
2025-05-02 03:47:00.089 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/Account - -
2025-05-02 03:47:00.092 +00:00 [ERR] HTTP GET /api/Account responded 500 in 1.9442 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:47:00.092 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:47:00.093 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/Account - - - 500 - text/plain;+charset=utf-8 4.3107ms
2025-05-02 03:48:33.733 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/7016 - -
2025-05-02 03:48:33.735 +00:00 [INF] CORS policy execution successful.
2025-05-02 03:48:33.736 +00:00 [INF] HTTP OPTIONS /api/account/user/7016 responded 204 in 1.4861 ms
2025-05-02 03:48:33.736 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/7016 - - - 204 - - 2.7716ms
2025-05-02 03:48:34.101 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/7016 - -
2025-05-02 03:48:34.102 +00:00 [INF] CORS policy execution successful.
2025-05-02 03:48:34.102 +00:00 [ERR] HTTP GET /api/account/user/7016 responded 500 in 0.7334 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:48:34.103 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:48:34.104 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/7016 - - - 500 - text/plain;+charset=utf-8 2.6237ms
2025-05-02 03:48:43.714 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 03:48:43.714 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 0.5546ms
2025-05-02 03:48:44.313 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 03:48:44.316 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 3.3121ms
2025-05-02 03:49:20.675 +00:00 [INF] Application is shutting down...
2025-05-02 03:49:26.256 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 03:49:26.342 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 03:49:26.345 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 03:49:26.345 +00:00 [INF] Hosting environment: Development
2025-05-02 03:49:26.345 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 03:49:37.989 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - -
2025-05-02 03:49:38.036 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 03:49:38.046 +00:00 [ERR] HTTP GET / responded 500 in 11.8514 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:49:38.057 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:49:38.083 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - - - 500 - text/html;+charset=utf-8 97.2833ms
2025-05-02 03:49:38.778 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - -
2025-05-02 03:49:38.779 +00:00 [ERR] HTTP GET /favicon.ico responded 500 in 0.5721 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:49:38.780 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:49:38.782 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - - - 500 - text/plain;+charset=utf-8 4.0829ms
2025-05-02 03:55:58.162 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - -
2025-05-02 03:55:58.164 +00:00 [ERR] HTTP GET / responded 500 in 1.7561 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:55:58.165 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:55:58.167 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - - - 500 - text/html;+charset=utf-8 4.8795ms
2025-05-02 03:55:58.851 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - -
2025-05-02 03:55:58.852 +00:00 [ERR] HTTP GET /favicon.ico responded 500 in 0.3374 ms
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2025-05-02 03:55:58.852 +00:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: String reference not set to an instance of a String. (Parameter 's')
   at System.Text.Encoding.GetBytes(String s)
   at System.Text.UTF8Encoding.UTF8EncodingSealed.GetBytes(String s)
   at Program.<>c__DisplayClass0_0.<<Main>$>b__3(JwtBearerOptions options) in /home/coder/project/workspace/dotnetapp/Program.cs:line 69
   at Microsoft.Extensions.Options.ConfigureNamedOptions`1.Configure(String name, TOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c.<Get>b__10_0(String name, IOptionsFactory`1 factory)
   at Microsoft.Extensions.Options.OptionsCache`1.<>c__DisplayClass3_1`1.<GetOrAdd>b__2()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location ---
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd[TArg](String name, Func`3 createOptions, TArg factoryArgument)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-02 03:55:58.853 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/favicon.ico - - - 500 - text/plain;+charset=utf-8 1.7148ms
2025-05-02 03:56:05.882 +00:00 [INF] Application is shutting down...
2025-05-02 03:56:09.362 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 03:56:09.444 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 03:56:09.447 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 03:56:09.447 +00:00 [INF] Hosting environment: Development
2025-05-02 03:56:09.447 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 03:56:16.651 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - -
2025-05-02 03:56:16.698 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 03:56:16.718 +00:00 [INF] HTTP GET / responded 404 in 22.7953 ms
2025-05-02 03:56:16.724 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - - - 404 0 - 75.7325ms
2025-05-02 03:56:21.339 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 03:56:21.441 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 102.5364ms
2025-05-02 03:56:21.933 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 03:56:22.006 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 72.3152ms
2025-05-02 03:56:22.762 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 03:56:22.763 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 0.6777ms
2025-05-02 03:56:23.143 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 03:56:23.147 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 4.0199ms
2025-05-02 03:56:31.827 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/Account - -
2025-05-02 03:56:31.832 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager)
2025-05-02 03:56:31.836 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 03:56:31.836 +00:00 [INF] HTTP GET /api/Account responded 401 in 7.2715 ms
2025-05-02 03:56:31.836 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/Account - - - 401 0 - 8.9276ms
=======
2025-05-02 03:35:31.165 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 03:35:31.225 +00:00 [INF] Creating key {486ef1e3-3963-4c64-8a34-c0867b6c4ae8} with creation date 2025-05-02 03:35:31Z, activation date 2025-05-02 03:35:31Z, and expiration date 2025-07-31 03:35:31Z.
2025-05-02 03:35:31.236 +00:00 [WRN] No XML encryptor configured. Key {486ef1e3-3963-4c64-8a34-c0867b6c4ae8} may be persisted to storage in unencrypted form.
2025-05-02 03:35:31.239 +00:00 [INF] Writing data to file '/home/coder/.aspnet/DataProtection-Keys/key-486ef1e3-3963-4c64-8a34-c0867b6c4ae8.xml'.
2025-05-02 03:35:31.291 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 03:35:31.295 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 03:35:31.295 +00:00 [INF] Hosting environment: Development
2025-05-02 03:35:31.295 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 03:36:29.260 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:36:29.350 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 03:36:29.540 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:29.571 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:30.068 +00:00 [INF] Registration attempt for email: abcd23bf7501-d3c5-4ae2-864a-208876191b34@gmail.com
2025-05-02 03:36:30.075 +00:00 [INF] Registration process started for email: abcd23bf7501-d3c5-4ae2-864a-208876191b34@gmail.com
2025-05-02 03:36:31.128 +00:00 [WRN] No store type was specified for the decimal property 'Balance' on entity type 'Account'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 03:36:31.128 +00:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Transaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 03:36:31.342 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:32.131 +00:00 [INF] Executed DbCommand (46ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:32.560 +00:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:36:32.604 +00:00 [INF] Registration successful for email: abcd23bf7501-d3c5-4ae2-864a-208876191b34@gmail.com
2025-05-02 03:36:32.604 +00:00 [INF] Registration successful for email: abcd23bf7501-d3c5-4ae2-864a-208876191b34@gmail.com
2025-05-02 03:36:32.607 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:32.643 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 3066.4281ms
2025-05-02 03:36:32.644 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:32.648 +00:00 [INF] HTTP POST /api/register responded 200 in 3300.8617 ms
2025-05-02 03:36:32.655 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 3398.4482ms
2025-05-02 03:36:32.746 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:36:32.748 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:32.748 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:32.757 +00:00 [INF] Registration attempt for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:32.757 +00:00 [INF] Registration process started for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:32.766 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:32.821 +00:00 [INF] Executed DbCommand (52ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:33.146 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:36:33.149 +00:00 [INF] Registration successful for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:33.149 +00:00 [INF] Registration successful for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:33.150 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:33.150 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 401.686ms
2025-05-02 03:36:33.150 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:33.150 +00:00 [INF] HTTP POST /api/register responded 200 in 402.9574 ms
2025-05-02 03:36:33.150 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 404.7669ms
2025-05-02 03:36:33.153 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:36:33.155 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:33.159 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:33.163 +00:00 [INF] Login attempt for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:33.165 +00:00 [INF] Login process started for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:33.260 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:33.263 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:33.567 +00:00 [INF] Token generated successfully.
2025-05-02 03:36:33.728 +00:00 [INF] Login successful for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com
2025-05-02 03:36:33.728 +00:00 [INF] Login successful for email: abcd69e3e985-4d03-46ae-b849-4633641221c2@gmail.com. Token issued.
2025-05-02 03:36:33.728 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:33.729 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 570.5705ms
2025-05-02 03:36:33.729 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:33.729 +00:00 [INF] HTTP POST /api/login responded 200 in 575.5803 ms
2025-05-02 03:36:33.730 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 576.2124ms
2025-05-02 03:36:33.771 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:36:33.771 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:33.771 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:33.771 +00:00 [INF] Registration attempt for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:33.771 +00:00 [INF] Registration process started for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:33.772 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:33.773 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:34.144 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:36:34.147 +00:00 [INF] Registration successful for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:34.147 +00:00 [INF] Registration successful for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:34.147 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:34.147 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 376.0653ms
2025-05-02 03:36:34.147 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:34.147 +00:00 [INF] HTTP POST /api/register responded 200 in 376.3269 ms
2025-05-02 03:36:34.147 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 376.5968ms
2025-05-02 03:36:34.148 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:36:34.148 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:34.149 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:34.149 +00:00 [INF] Login attempt for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:34.149 +00:00 [INF] Login process started for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:34.150 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:34.151 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:34.426 +00:00 [INF] Token generated successfully.
2025-05-02 03:36:34.427 +00:00 [INF] Login successful for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com
2025-05-02 03:36:34.427 +00:00 [INF] Login successful for email: abcdd74dcacf-f4c9-4dc8-a597-38641f1c1b2f@gmail.com. Token issued.
2025-05-02 03:36:34.427 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:34.427 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 278.5034ms
2025-05-02 03:36:34.427 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:34.427 +00:00 [INF] HTTP POST /api/login responded 200 in 278.9526 ms
2025-05-02 03:36:34.428 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 279.2830ms
2025-05-02 03:36:34.490 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:36:34.569 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:36:34.570 +00:00 [INF] Route matched with {action = "GetAllAccounts", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllAccounts() on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 03:36:34.572 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:34.584 +00:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
2025-05-02 03:36:34.609 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 03:36:34.631 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp) in 60.4865ms
2025-05-02 03:36:34.631 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:36:34.631 +00:00 [INF] HTTP GET /api/account responded 200 in 109.7038 ms
2025-05-02 03:36:34.631 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 200 - application/json;+charset=utf-8 141.1821ms
2025-05-02 03:36:34.637 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:36:34.637 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:34.637 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:34.637 +00:00 [INF] Registration attempt for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.638 +00:00 [INF] Registration process started for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.638 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:34.640 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:34.816 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:36:34.818 +00:00 [INF] Registration successful for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.819 +00:00 [INF] Registration successful for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.819 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:34.819 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 181.8408ms
2025-05-02 03:36:34.819 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:36:34.819 +00:00 [INF] HTTP POST /api/register responded 200 in 182.1248 ms
2025-05-02 03:36:34.819 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 182.3602ms
2025-05-02 03:36:34.819 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:36:34.820 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:34.820 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:36:34.820 +00:00 [INF] Login attempt for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.820 +00:00 [INF] Login process started for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:34.821 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:36:34.821 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:36:35.049 +00:00 [INF] Token generated successfully.
2025-05-02 03:36:35.049 +00:00 [INF] Login successful for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com
2025-05-02 03:36:35.049 +00:00 [INF] Login successful for email: abcd20458d9f-de81-476a-91e4-7663704f4d01@gmail.com. Token issued.
2025-05-02 03:36:35.049 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:36:35.049 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 229.6622ms
2025-05-02 03:36:35.049 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:36:35.049 +00:00 [INF] HTTP POST /api/login responded 200 in 229.8934 ms
2025-05-02 03:36:35.050 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 230.1418ms
2025-05-02 03:36:35.050 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:36:35.051 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager)
2025-05-02 03:36:35.054 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 03:36:35.054 +00:00 [INF] HTTP GET /api/account responded 401 in 3.5571 ms
2025-05-02 03:36:35.054 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 401 0 - 3.8492ms
2025-05-02 03:38:01.702 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:38:01.703 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:01.703 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:01.704 +00:00 [INF] Registration attempt for email: abcd188989e9-d80b-4d35-8141-c6565d1befb1@gmail.com
2025-05-02 03:38:01.704 +00:00 [INF] Registration process started for email: abcd188989e9-d80b-4d35-8141-c6565d1befb1@gmail.com
2025-05-02 03:38:01.704 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:01.706 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:01.878 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:01.881 +00:00 [INF] Registration successful for email: abcd188989e9-d80b-4d35-8141-c6565d1befb1@gmail.com
2025-05-02 03:38:01.881 +00:00 [INF] Registration successful for email: abcd188989e9-d80b-4d35-8141-c6565d1befb1@gmail.com
2025-05-02 03:38:01.881 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:01.881 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 178.0299ms
2025-05-02 03:38:01.881 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:01.881 +00:00 [INF] HTTP POST /api/register responded 200 in 178.4032 ms
2025-05-02 03:38:01.881 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 178.7117ms
2025-05-02 03:38:01.921 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:38:01.921 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:01.921 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:01.922 +00:00 [INF] Registration attempt for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:01.922 +00:00 [INF] Registration process started for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:01.922 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:01.923 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:02.095 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:02.098 +00:00 [INF] Registration successful for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:02.098 +00:00 [INF] Registration successful for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:02.098 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:02.098 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 177.4585ms
2025-05-02 03:38:02.099 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:02.099 +00:00 [INF] HTTP POST /api/register responded 200 in 177.7784 ms
2025-05-02 03:38:02.099 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 178.0099ms
2025-05-02 03:38:02.100 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:02.100 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:02.100 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:02.101 +00:00 [INF] Login attempt for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:02.101 +00:00 [INF] Login process started for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:02.101 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.102 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:02.275 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:02.276 +00:00 [INF] Login successful for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com
2025-05-02 03:38:02.276 +00:00 [INF] Login successful for email: abcd76b2a2bb-928a-4048-bf4e-fdd455a762f7@gmail.com. Token issued.
2025-05-02 03:38:02.276 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:02.276 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 175.6556ms
2025-05-02 03:38:02.276 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:02.276 +00:00 [INF] HTTP POST /api/login responded 200 in 175.9493 ms
2025-05-02 03:38:02.276 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 176.1355ms
2025-05-02 03:38:02.306 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:38:02.306 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:02.306 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:02.307 +00:00 [INF] Registration attempt for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.307 +00:00 [INF] Registration process started for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.307 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.308 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:02.481 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:02.484 +00:00 [INF] Registration successful for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.484 +00:00 [INF] Registration successful for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.484 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:02.484 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 177.6208ms
2025-05-02 03:38:02.484 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:02.484 +00:00 [INF] HTTP POST /api/register responded 200 in 177.9095 ms
2025-05-02 03:38:02.484 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 178.2400ms
2025-05-02 03:38:02.487 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:02.487 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:02.487 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:02.487 +00:00 [INF] Login attempt for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.487 +00:00 [INF] Login process started for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.488 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.489 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:02.659 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:02.659 +00:00 [INF] Login successful for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com
2025-05-02 03:38:02.659 +00:00 [INF] Login successful for email: abcdb3890271-993e-4794-95a4-fe1372237a2b@gmail.com. Token issued.
2025-05-02 03:38:02.659 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:02.659 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 172.1715ms
2025-05-02 03:38:02.659 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:02.659 +00:00 [INF] HTTP POST /api/login responded 200 in 172.4177 ms
2025-05-02 03:38:02.659 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 172.6489ms
2025-05-02 03:38:02.716 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:38:02.717 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:38:02.717 +00:00 [INF] Route matched with {action = "GetAllAccounts", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllAccounts() on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 03:38:02.718 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.719 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
2025-05-02 03:38:02.719 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 03:38:02.720 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp) in 2.0959ms
2025-05-02 03:38:02.720 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:38:02.720 +00:00 [INF] HTTP GET /api/account responded 200 in 3.2515 ms
2025-05-02 03:38:02.720 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 200 - application/json;+charset=utf-8 3.4865ms
2025-05-02 03:38:02.723 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:38:02.723 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:02.723 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:02.724 +00:00 [INF] Registration attempt for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.724 +00:00 [INF] Registration process started for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.724 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.725 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:02.895 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:02.898 +00:00 [INF] Registration successful for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.898 +00:00 [INF] Registration successful for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.898 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:02.898 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 175.1593ms
2025-05-02 03:38:02.898 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:02.898 +00:00 [INF] HTTP POST /api/register responded 200 in 175.4399 ms
2025-05-02 03:38:02.899 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 175.6253ms
2025-05-02 03:38:02.899 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:02.899 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:02.899 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:02.900 +00:00 [INF] Login attempt for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.900 +00:00 [INF] Login process started for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:02.900 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:02.901 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:03.070 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:03.070 +00:00 [INF] Login successful for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com
2025-05-02 03:38:03.070 +00:00 [INF] Login successful for email: abcd9c2c04c1-ed24-4ebb-9f53-684e06262dd8@gmail.com. Token issued.
2025-05-02 03:38:03.070 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:03.070 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 170.8621ms
2025-05-02 03:38:03.070 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:03.070 +00:00 [INF] HTTP POST /api/login responded 200 in 171.1548 ms
2025-05-02 03:38:03.071 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 171.4231ms
2025-05-02 03:38:03.071 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:38:03.071 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager)
2025-05-02 03:38:03.071 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 03:38:03.071 +00:00 [INF] HTTP GET /api/account responded 401 in 0.4205 ms
2025-05-02 03:38:03.071 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 401 0 - 0.6201ms
2025-05-02 03:38:28.136 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:38:28.136 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.136 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:28.136 +00:00 [INF] Registration attempt for email: abcde847cfa2-4a57-4694-9049-e3928a046427@gmail.com
2025-05-02 03:38:28.137 +00:00 [INF] Registration process started for email: abcde847cfa2-4a57-4694-9049-e3928a046427@gmail.com
2025-05-02 03:38:28.137 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:28.138 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:28.311 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:28.313 +00:00 [INF] Registration successful for email: abcde847cfa2-4a57-4694-9049-e3928a046427@gmail.com
2025-05-02 03:38:28.313 +00:00 [INF] Registration successful for email: abcde847cfa2-4a57-4694-9049-e3928a046427@gmail.com
2025-05-02 03:38:28.313 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:28.313 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 177.4707ms
2025-05-02 03:38:28.314 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.314 +00:00 [INF] HTTP POST /api/register responded 200 in 177.7537 ms
2025-05-02 03:38:28.314 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 178.0642ms
2025-05-02 03:38:28.351 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 03:38:28.351 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.351 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:28.351 +00:00 [INF] Registration attempt for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.351 +00:00 [INF] Registration process started for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.352 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:28.353 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:28.529 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:28.532 +00:00 [INF] Registration successful for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.532 +00:00 [INF] Registration successful for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.532 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:28.532 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 181.4244ms
2025-05-02 03:38:28.532 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.532 +00:00 [INF] HTTP POST /api/register responded 200 in 181.6856 ms
2025-05-02 03:38:28.533 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 181.8748ms
2025-05-02 03:38:28.534 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:28.534 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:28.534 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:28.534 +00:00 [INF] Login attempt for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.534 +00:00 [INF] Login process started for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.535 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:28.535 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:28.705 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:28.706 +00:00 [INF] Login successful for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com
2025-05-02 03:38:28.706 +00:00 [INF] Login successful for email: abcdca2919aa-fdf6-49a2-ad99-04978d76dee5@gmail.com. Token issued.
2025-05-02 03:38:28.706 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:28.706 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 171.9838ms
2025-05-02 03:38:28.706 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:28.706 +00:00 [INF] HTTP POST /api/login responded 200 in 172.2826 ms
2025-05-02 03:38:28.706 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 172.5478ms
2025-05-02 03:38:28.733 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:38:28.733 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.733 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:28.734 +00:00 [INF] Registration attempt for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.734 +00:00 [INF] Registration process started for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.734 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:28.735 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:28.906 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:28.909 +00:00 [INF] Registration successful for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.909 +00:00 [INF] Registration successful for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.909 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:28.909 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 175.9661ms
2025-05-02 03:38:28.909 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:28.909 +00:00 [INF] HTTP POST /api/register responded 200 in 176.2471 ms
2025-05-02 03:38:28.910 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 176.4812ms
2025-05-02 03:38:28.913 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:28.913 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:28.913 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:28.913 +00:00 [INF] Login attempt for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.913 +00:00 [INF] Login process started for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:28.914 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:28.915 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:29.088 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:29.088 +00:00 [INF] Login successful for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com
2025-05-02 03:38:29.088 +00:00 [INF] Login successful for email: abcd6e86967a-dc0f-4e27-baf5-3469c774ab45@gmail.com. Token issued.
2025-05-02 03:38:29.089 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:29.089 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 176.1752ms
2025-05-02 03:38:29.089 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:29.089 +00:00 [INF] HTTP POST /api/login responded 200 in 176.5046 ms
2025-05-02 03:38:29.090 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 176.8971ms
2025-05-02 03:38:29.144 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:38:29.146 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:38:29.146 +00:00 [INF] Route matched with {action = "GetAllAccounts", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllAccounts() on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 03:38:29.147 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:29.149 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
2025-05-02 03:38:29.149 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 03:38:29.149 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp) in 3.3779ms
2025-05-02 03:38:29.149 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 03:38:29.149 +00:00 [INF] HTTP GET /api/account responded 200 in 4.6279 ms
2025-05-02 03:38:29.149 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 200 - application/json;+charset=utf-8 5.0274ms
2025-05-02 03:38:29.153 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 03:38:29.153 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:29.154 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:29.155 +00:00 [INF] Registration attempt for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.155 +00:00 [INF] Registration process started for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.155 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:29.157 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:29.328 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 03:38:29.331 +00:00 [INF] Registration successful for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.331 +00:00 [INF] Registration successful for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.331 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:29.331 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 177.9354ms
2025-05-02 03:38:29.332 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 03:38:29.332 +00:00 [INF] HTTP POST /api/register responded 200 in 178.1893 ms
2025-05-02 03:38:29.332 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 178.3655ms
2025-05-02 03:38:29.332 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 03:38:29.332 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:29.332 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 03:38:29.333 +00:00 [INF] Login attempt for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.333 +00:00 [INF] Login process started for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.333 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 03:38:29.334 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 03:38:29.503 +00:00 [INF] Token generated successfully.
2025-05-02 03:38:29.503 +00:00 [INF] Login successful for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com
2025-05-02 03:38:29.503 +00:00 [INF] Login successful for email: abcd631cd60b-182b-4443-a99e-37cdec898b98@gmail.com. Token issued.
2025-05-02 03:38:29.503 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 03:38:29.503 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 171.0692ms
2025-05-02 03:38:29.504 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 03:38:29.504 +00:00 [INF] HTTP POST /api/login responded 200 in 171.3078 ms
2025-05-02 03:38:29.504 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 171.4940ms
2025-05-02 03:38:29.504 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 03:38:29.505 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager)
2025-05-02 03:38:29.505 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 03:38:29.505 +00:00 [INF] HTTP GET /api/account responded 401 in 0.4139 ms
2025-05-02 03:38:29.505 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 401 0 - 0.5820ms
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             2025-05-02 04:55:13.625 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 04:55:13.671 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 45.9393ms
2025-05-02 04:55:14.011 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 04:55:14.073 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 62.1586ms
2025-05-02 04:55:25.912 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register application/json 148
2025-05-02 04:55:25.913 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:55:25.914 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 04:55:25.914 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 04:55:25.917 +00:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-02 04:55:25.921 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 6.8228ms
2025-05-02 04:55:25.921 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 04:55:25.921 +00:00 [INF] HTTP POST /api/register responded 400 in 8.3191 ms
2025-05-02 04:55:25.921 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register application/json 148 - 400 - application/problem+json;+charset=utf-8 8.5189ms
2025-05-02 04:57:33.342 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register - -
2025-05-02 04:57:33.342 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:57:33.343 +00:00 [INF] HTTP OPTIONS /api/register responded 204 in 1.1457 ms
2025-05-02 04:57:33.343 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register - - - 204 - - 1.4317ms
2025-05-02 04:57:33.862 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register application/json 143
2025-05-02 04:57:33.862 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:57:33.862 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 04:57:33.862 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 04:57:33.863 +00:00 [INF] Registration attempt for email: testforvinay@gmail.com
2025-05-02 04:57:33.863 +00:00 [INF] Registration process started for email: testforvinay@gmail.com
2025-05-02 04:57:33.863 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 04:57:33.864 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 04:57:34.034 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 04:57:34.037 +00:00 [INF] Registration successful for email: testforvinay@gmail.com
2025-05-02 04:57:34.037 +00:00 [INF] Registration successful for email: testforvinay@gmail.com
2025-05-02 04:57:34.037 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 04:57:34.037 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 175.2785ms
2025-05-02 04:57:34.037 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 04:57:34.037 +00:00 [INF] HTTP POST /api/register responded 200 in 175.6344 ms
2025-05-02 04:57:34.038 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/register application/json 143 - 200 - application/json;+charset=utf-8 175.8566ms
2025-05-02 04:57:49.518 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 04:57:49.518 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:57:49.518 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 0.1067 ms
2025-05-02 04:57:49.518 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 0.3684ms
2025-05-02 04:57:50.095 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 04:57:50.096 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:57:50.096 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 04:57:50.096 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 04:57:50.096 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 04:57:50.096 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 04:57:50.097 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 04:57:50.098 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 04:57:50.269 +00:00 [INF] Token generated successfully.
2025-05-02 04:57:50.269 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 04:57:50.269 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 04:57:50.269 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 04:57:50.269 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 173.3336ms
2025-05-02 04:57:50.269 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 04:57:50.269 +00:00 [INF] HTTP POST /api/login responded 200 in 173.6882 ms
2025-05-02 04:57:50.269 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 173.9952ms
2025-05-02 04:58:14.097 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 04:58:14.097 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:58:14.097 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0836 ms
2025-05-02 04:58:14.097 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3297ms
2025-05-02 04:58:15.257 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 04:58:15.257 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:58:15.258 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 04:58:15.260 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 04:58:15.261 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 04:58:15.267 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 04:58:15.267 +00:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-05-02 04:58:15.267 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 7.6597ms
2025-05-02 04:58:15.267 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 04:58:15.267 +00:00 [INF] HTTP GET /api/account/user/1006 responded 404 in 10.3723 ms
2025-05-02 04:58:15.267 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 404 - text/plain;+charset=utf-8 10.6908ms
2025-05-02 04:58:45.934 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 04:58:45.934 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:58:45.935 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.2582 ms
2025-05-02 04:58:45.935 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.4733ms
2025-05-02 04:58:46.233 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 04:58:46.233 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:58:46.233 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 04:58:46.233 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 04:58:46.235 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 04:58:46.236 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 04:58:46.236 +00:00 [INF] Executing NotFoundObjectResult, writing value of type 'System.String'.
2025-05-02 04:58:46.237 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 3.0104ms
2025-05-02 04:58:46.237 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 04:58:46.237 +00:00 [INF] HTTP GET /api/account/user/1006 responded 404 in 3.7255 ms
2025-05-02 04:58:46.237 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 404 - text/plain;+charset=utf-8 3.9659ms
2025-05-02 04:59:06.322 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account - -
2025-05-02 04:59:06.322 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:59:06.322 +00:00 [INF] HTTP OPTIONS /api/account responded 204 in 0.3243 ms
2025-05-02 04:59:06.322 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account - - - 204 - - 0.6551ms
2025-05-02 04:59:06.872 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account application/json 160
2025-05-02 04:59:06.872 +00:00 [INF] CORS policy execution successful.
2025-05-02 04:59:06.873 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp)'
2025-05-02 04:59:06.874 +00:00 [INF] Route matched with {action = "CreateAccount", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAccount(dotnetapp.Models.Account) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 04:59:06.885 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 04:59:06.886 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 04:59:06.920 +00:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (Size = 100), @p1='?' (Size = 50), @p2='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 255), @p6='?' (Size = 50), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Accounts] ([AccountHolderName], [AccountType], [Balance], [DateCreated], [LastUpdated], [ProofOfIdentity], [Status], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
SELECT [AccountId]
FROM [Accounts]
WHERE @@ROWCOUNT = 1 AND [AccountId] = scope_identity();
2025-05-02 04:59:06.929 +00:00 [INF] Executing CreatedAtActionResult, writing value of type 'dotnetapp.Models.Account'.
2025-05-02 04:59:06.947 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp) in 73.207ms
2025-05-02 04:59:06.948 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp)'
2025-05-02 04:59:06.948 +00:00 [INF] HTTP POST /api/account responded 201 in 75.1969 ms
2025-05-02 04:59:06.948 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account application/json 160 - 201 - application/json;+charset=utf-8 75.4333ms
2025-05-02 05:00:06.828 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 05:00:06.828 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:06.828 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:06.829 +00:00 [INF] Registration attempt for email: abcd4daaea5f-38db-44ae-a272-bb77f07a1bcc@gmail.com
2025-05-02 05:00:06.829 +00:00 [INF] Registration process started for email: abcd4daaea5f-38db-44ae-a272-bb77f07a1bcc@gmail.com
2025-05-02 05:00:06.829 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:06.836 +00:00 [INF] Executed DbCommand (6ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:07.109 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 05:00:07.112 +00:00 [INF] Registration successful for email: abcd4daaea5f-38db-44ae-a272-bb77f07a1bcc@gmail.com
2025-05-02 05:00:07.112 +00:00 [INF] Registration successful for email: abcd4daaea5f-38db-44ae-a272-bb77f07a1bcc@gmail.com
2025-05-02 05:00:07.112 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:07.112 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 284.1754ms
2025-05-02 05:00:07.113 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.113 +00:00 [INF] HTTP POST /api/register responded 200 in 284.5808 ms
2025-05-02 05:00:07.113 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 284.9920ms
2025-05-02 05:00:07.156 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198
2025-05-02 05:00:07.156 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.156 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:07.157 +00:00 [INF] Registration attempt for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.157 +00:00 [INF] Registration process started for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.157 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.158 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:07.331 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 05:00:07.333 +00:00 [INF] Registration successful for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.334 +00:00 [INF] Registration successful for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.334 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:07.334 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 177.2216ms
2025-05-02 05:00:07.334 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.334 +00:00 [INF] HTTP POST /api/register responded 200 in 177.4751 ms
2025-05-02 05:00:07.334 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 198 - 200 - application/json;+charset=utf-8 177.6840ms
2025-05-02 05:00:07.336 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 05:00:07.337 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:07.337 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:07.337 +00:00 [INF] Login attempt for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.337 +00:00 [INF] Login process started for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.337 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.338 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:07.507 +00:00 [INF] Token generated successfully.
2025-05-02 05:00:07.507 +00:00 [INF] Login successful for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com
2025-05-02 05:00:07.507 +00:00 [INF] Login successful for email: abcd0dc5c86b-351e-47da-832b-dc0d38ba2a14@gmail.com. Token issued.
2025-05-02 05:00:07.508 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:07.508 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 171.044ms
2025-05-02 05:00:07.508 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:07.508 +00:00 [INF] HTTP POST /api/login responded 200 in 171.3128 ms
2025-05-02 05:00:07.508 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 171.4649ms
2025-05-02 05:00:07.540 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 05:00:07.541 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.541 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:07.541 +00:00 [INF] Registration attempt for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.541 +00:00 [INF] Registration process started for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.541 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.543 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:07.723 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 05:00:07.727 +00:00 [INF] Registration successful for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.727 +00:00 [INF] Registration successful for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.728 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:07.728 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 187.5231ms
2025-05-02 05:00:07.728 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.729 +00:00 [INF] HTTP POST /api/register responded 200 in 188.0176 ms
2025-05-02 05:00:07.729 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 188.5270ms
2025-05-02 05:00:07.730 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 05:00:07.730 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:07.730 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:07.731 +00:00 [INF] Login attempt for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.731 +00:00 [INF] Login process started for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.733 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.734 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:07.906 +00:00 [INF] Token generated successfully.
2025-05-02 05:00:07.907 +00:00 [INF] Login successful for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com
2025-05-02 05:00:07.907 +00:00 [INF] Login successful for email: abcd2d99ef74-ad86-48bf-b2b7-6f329df29a85@gmail.com. Token issued.
2025-05-02 05:00:07.907 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:07.907 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 176.8338ms
2025-05-02 05:00:07.907 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:07.907 +00:00 [INF] HTTP POST /api/login responded 200 in 177.3377 ms
2025-05-02 05:00:07.907 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 177.6513ms
2025-05-02 05:00:07.957 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 05:00:07.958 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 05:00:07.958 +00:00 [INF] Route matched with {action = "GetAllAccounts", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAllAccounts() on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:00:07.959 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.960 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
2025-05-02 05:00:07.961 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:00:07.963 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp) in 4.4227ms
2025-05-02 05:00:07.963 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAllAccounts (dotnetapp)'
2025-05-02 05:00:07.963 +00:00 [INF] HTTP GET /api/account responded 200 in 5.5196 ms
2025-05-02 05:00:07.963 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 200 - application/json;+charset=utf-8 5.8821ms
2025-05-02 05:00:07.966 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197
2025-05-02 05:00:07.966 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:07.966 +00:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(dotnetapp.Models.User) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:07.967 +00:00 [INF] Registration attempt for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:07.967 +00:00 [INF] Registration process started for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:07.967 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:07.968 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:08.138 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (Size = 254), @p1='?' (Size = 15), @p2='?' (Size = 100), @p3='?' (Size = 20), @p4='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Email], [MobileNumber], [Password], [UserRole], [Username])
VALUES (@p0, @p1, @p2, @p3, @p4);
SELECT [UserId]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [UserId] = scope_identity();
2025-05-02 05:00:08.141 +00:00 [INF] Registration successful for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:08.141 +00:00 [INF] Registration successful for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:08.141 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:08.141 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Register (dotnetapp) in 174.4461ms
2025-05-02 05:00:08.141 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Register (dotnetapp)'
2025-05-02 05:00:08.141 +00:00 [INF] HTTP POST /api/register responded 200 in 174.6636 ms
2025-05-02 05:00:08.141 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/register application/json;+charset=utf-8 197 - 200 - application/json;+charset=utf-8 174.8255ms
2025-05-02 05:00:08.141 +00:00 [INF] Request starting HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88
2025-05-02 05:00:08.141 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:08.142 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:00:08.142 +00:00 [INF] Login attempt for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:08.142 +00:00 [INF] Login process started for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:08.142 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:00:08.143 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:00:08.313 +00:00 [INF] Token generated successfully.
2025-05-02 05:00:08.313 +00:00 [INF] Login successful for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com
2025-05-02 05:00:08.314 +00:00 [INF] Login successful for email: abcd74ec64cc-f4aa-47d5-acc1-4bc7a8f98e19@gmail.com. Token issued.
2025-05-02 05:00:08.314 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:00:08.314 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 172.691ms
2025-05-02 05:00:08.314 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:00:08.314 +00:00 [INF] HTTP POST /api/login responded 200 in 172.8872 ms
2025-05-02 05:00:08.314 +00:00 [INF] Request finished HTTP/1.1 POST http://localhost:8080/api/login application/json;+charset=utf-8 88 - 200 - application/json;+charset=utf-8 173.0431ms
2025-05-02 05:00:08.315 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/api/account - -
2025-05-02 05:00:08.315 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager)
2025-05-02 05:00:08.316 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 05:00:08.316 +00:00 [INF] HTTP GET /api/account responded 401 in 0.4043 ms
2025-05-02 05:00:08.316 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/api/account - - - 401 0 - 0.5948ms
2025-05-02 05:01:07.148 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:01:07.148 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:01:07.148 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.2641 ms
2025-05-02 05:01:07.148 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.5202ms
2025-05-02 05:01:07.394 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:01:07.395 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:01:07.395 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:01:07.395 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:01:07.396 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:01:07.402 +00:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:01:07.402 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:01:07.402 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 6.8388ms
2025-05-02 05:01:07.402 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:01:07.402 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 7.4825 ms
2025-05-02 05:01:07.402 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 7.7066ms
2025-05-02 05:06:41.002 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:06:41.002 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:06:41.002 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1207 ms
2025-05-02 05:06:41.002 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3491ms
2025-05-02 05:06:41.262 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:06:41.262 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:06:41.262 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:06:41.262 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:06:41.263 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:06:41.303 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:06:41.303 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:06:41.303 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 40.8633ms
2025-05-02 05:06:41.303 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:06:41.303 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 41.4543 ms
2025-05-02 05:06:41.303 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 41.6902ms
2025-05-02 05:11:08.541 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:11:08.541 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:11:08.541 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.3413 ms
2025-05-02 05:11:08.541 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.5246ms
2025-05-02 05:11:08.788 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:11:08.788 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:11:08.789 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:11:08.789 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:11:08.790 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:11:08.791 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:11:08.791 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:11:08.791 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.0592ms
2025-05-02 05:11:08.791 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:11:08.791 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.7042 ms
2025-05-02 05:11:08.791 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8984ms
2025-05-02 05:16:22.396 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:16:22.396 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:16:22.396 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0743 ms
2025-05-02 05:16:22.396 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2736ms
2025-05-02 05:16:22.648 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:16:22.648 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:16:22.649 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:16:22.649 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:16:22.650 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:16:22.651 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:16:22.651 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:16:22.651 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1689ms
2025-05-02 05:16:22.651 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:16:22.651 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.8827 ms
2025-05-02 05:16:22.651 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.0838ms
2025-05-02 05:17:29.913 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:17:29.913 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:17:29.913 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.3176 ms
2025-05-02 05:17:29.913 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.5285ms
2025-05-02 05:17:30.184 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:17:30.184 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:17:30.184 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:17:30.184 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:17:30.185 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:17:30.186 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:17:30.186 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:17:30.186 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9549ms
2025-05-02 05:17:30.186 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:17:30.186 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5580 ms
2025-05-02 05:17:30.187 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.7983ms
2025-05-02 05:17:43.683 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:17:43.683 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:17:43.683 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0817 ms
2025-05-02 05:17:43.683 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3263ms
2025-05-02 05:17:44.002 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:17:44.002 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:17:44.002 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:17:44.002 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:17:44.003 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:17:44.004 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:17:44.004 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:17:44.004 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8299ms
2025-05-02 05:17:44.004 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:17:44.004 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.4467 ms
2025-05-02 05:17:44.004 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.6656ms
2025-05-02 05:23:07.463 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:23:07.463 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:23:07.463 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0783 ms
2025-05-02 05:23:07.463 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3054ms
2025-05-02 05:23:07.719 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:23:07.719 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:23:07.720 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:23:07.720 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:23:07.720 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:23:07.721 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:23:07.721 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:23:07.722 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8962ms
2025-05-02 05:23:07.722 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:23:07.722 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.4623 ms
2025-05-02 05:23:07.722 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.6672ms
2025-05-02 05:23:28.802 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 05:23:28.802 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:23:28.802 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 0.0611 ms
2025-05-02 05:23:28.802 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 0.2375ms
2025-05-02 05:23:30.097 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 05:23:30.097 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:23:30.097 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:23:30.097 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:23:30.097 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 05:23:30.097 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 05:23:30.098 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:23:30.099 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:23:30.267 +00:00 [INF] Token generated successfully.
2025-05-02 05:23:30.267 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 05:23:30.267 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 05:23:30.267 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:23:30.267 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 170.3734ms
2025-05-02 05:23:30.267 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:23:30.268 +00:00 [INF] HTTP POST /api/login responded 200 in 170.7813 ms
2025-05-02 05:23:30.268 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 170.9692ms
2025-05-02 05:24:09.184 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:24:09.184 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:24:09.184 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.2074 ms
2025-05-02 05:24:09.184 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3829ms
2025-05-02 05:24:09.444 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:24:09.444 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:24:09.444 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:24:09.444 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:24:09.445 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:24:09.446 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:24:09.446 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:24:09.447 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2888ms
2025-05-02 05:24:09.447 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:24:09.447 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.0500 ms
2025-05-02 05:24:09.447 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.4478ms
2025-05-02 05:24:10.261 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:24:10.261 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:24:10.261 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:24:10.262 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:24:10.262 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:24:10.263 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:24:10.263 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:24:10.264 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9841ms
2025-05-02 05:24:10.264 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:24:10.264 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5414 ms
2025-05-02 05:24:10.264 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.7256ms
2025-05-02 05:29:03.833 +00:00 [INF] Application is shutting down...
2025-05-02 05:29:07.801 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 05:29:07.881 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 05:29:07.884 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 05:29:07.885 +00:00 [INF] Hosting environment: Development
2025-05-02 05:29:07.885 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 05:29:44.011 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - -
2025-05-02 05:29:44.057 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 05:29:44.077 +00:00 [INF] HTTP GET / responded 404 in 22.2096 ms
2025-05-02 05:29:44.083 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/ - - - 404 0 - 74.6562ms
2025-05-02 05:29:47.443 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 05:29:47.549 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 105.9049ms
2025-05-02 05:29:48.213 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 05:29:48.285 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 71.6186ms
2025-05-02 05:29:54.263 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 05:29:54.263 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 0.6959ms
2025-05-02 05:29:55.048 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - -
2025-05-02 05:29:55.053 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 4.2310ms
2025-05-02 05:32:15.210 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 05:32:15.212 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:32:15.213 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 1.9558 ms
2025-05-02 05:32:15.213 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 3.2173ms
2025-05-02 05:32:15.743 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 05:32:15.745 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:32:15.748 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:32:15.776 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:32:15.900 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 05:32:15.903 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 05:32:16.342 +00:00 [WRN] No store type was specified for the decimal property 'Balance' on entity type 'Account'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 05:32:16.343 +00:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Transaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 05:32:16.457 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:32:16.957 +00:00 [INF] Executed DbCommand (41ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:32:17.194 +00:00 [INF] Token generated successfully.
2025-05-02 05:32:17.258 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 05:32:17.258 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 05:32:17.261 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:32:17.279 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 1498.7734ms
2025-05-02 05:32:17.279 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:32:17.280 +00:00 [INF] HTTP POST /api/login responded 200 in 1535.7266 ms
2025-05-02 05:32:17.284 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 1540.6012ms
2025-05-02 05:32:26.804 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:32:26.804 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:32:26.804 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1157 ms
2025-05-02 05:32:26.804 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.4205ms
2025-05-02 05:32:27.120 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:32:27.120 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:32:27.168 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:32:27.170 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:32:27.177 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:32:27.191 +00:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:32:27.210 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:32:27.219 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 49.2885ms
2025-05-02 05:32:27.219 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:32:27.219 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 98.7790 ms
2025-05-02 05:32:27.219 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 99.1645ms
2025-05-02 05:37:12.370 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:37:12.370 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:37:12.370 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1022 ms
2025-05-02 05:37:12.370 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.4253ms
2025-05-02 05:37:12.711 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:37:12.711 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:37:12.712 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:37:12.712 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:37:12.755 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:37:12.759 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:37:12.759 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:37:12.759 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 47.0295ms
2025-05-02 05:37:12.759 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:37:12.759 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 48.1867 ms
2025-05-02 05:37:12.759 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 48.4724ms
2025-05-02 05:41:20.065 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:41:20.066 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:41:20.066 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0870 ms
2025-05-02 05:41:20.066 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3457ms
2025-05-02 05:41:20.314 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:41:20.314 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:41:20.315 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:41:20.315 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:41:20.318 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:41:20.319 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:41:20.319 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:41:20.319 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 3.6794ms
2025-05-02 05:41:20.319 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:41:20.319 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 4.9825 ms
2025-05-02 05:41:20.320 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 5.3026ms
2025-05-02 05:43:56.878 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:43:56.878 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:43:56.878 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1330 ms
2025-05-02 05:43:56.878 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3580ms
2025-05-02 05:43:57.128 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:43:57.128 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:43:57.129 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:43:57.129 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:43:57.129 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:43:57.131 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:43:57.131 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:43:57.131 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2223ms
2025-05-02 05:43:57.131 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:43:57.131 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.8891 ms
2025-05-02 05:43:57.131 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.1033ms
2025-05-02 05:44:24.974 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:44:24.974 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:44:24.975 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.8779 ms
2025-05-02 05:44:24.975 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.1547ms
2025-05-02 05:44:25.219 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:44:25.219 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:44:25.220 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:44:25.220 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:44:25.221 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:44:25.222 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:44:25.222 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:44:25.222 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.4387ms
2025-05-02 05:44:25.222 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:44:25.222 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.1621 ms
2025-05-02 05:44:25.222 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.4487ms
2025-05-02 05:47:26.064 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:47:26.064 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:47:26.064 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0860 ms
2025-05-02 05:47:26.064 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3136ms
2025-05-02 05:47:26.319 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:47:26.320 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:47:26.320 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:47:26.320 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:47:26.321 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:47:26.322 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:47:26.322 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:47:26.322 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.3019ms
2025-05-02 05:47:26.322 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:47:26.322 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.9288 ms
2025-05-02 05:47:26.323 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.1855ms
2025-05-02 05:48:06.270 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:48:06.270 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:48:06.270 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1208 ms
2025-05-02 05:48:06.270 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.4059ms
2025-05-02 05:48:06.528 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:48:06.528 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:48:06.528 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:48:06.528 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:48:06.529 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:48:06.530 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:48:06.530 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:48:06.530 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9844ms
2025-05-02 05:48:06.531 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:48:06.531 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5621 ms
2025-05-02 05:48:06.531 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8072ms
2025-05-02 05:50:19.481 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:50:19.481 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:50:19.482 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.7958 ms
2025-05-02 05:50:19.482 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.0600ms
2025-05-02 05:50:20.844 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:50:20.845 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:50:20.845 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:50:20.845 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:50:20.846 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:50:20.847 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:50:20.847 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:50:20.848 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.3741ms
2025-05-02 05:50:20.848 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:50:20.848 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.1231 ms
2025-05-02 05:50:20.848 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.3710ms
2025-05-02 05:50:34.313 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:50:34.313 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:50:34.313 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0710 ms
2025-05-02 05:50:34.313 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2890ms
2025-05-02 05:50:34.564 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:50:34.564 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:50:34.565 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:50:34.565 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:50:34.565 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:50:34.566 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:50:34.567 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:50:34.567 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.042ms
2025-05-02 05:50:34.567 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:50:34.567 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6544 ms
2025-05-02 05:50:34.567 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8700ms
2025-05-02 05:55:17.474 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 05:55:17.474 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:55:17.475 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 0.0829 ms
2025-05-02 05:55:17.475 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 0.3010ms
2025-05-02 05:55:18.015 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 05:55:18.015 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:55:18.015 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:55:18.015 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 05:55:18.016 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 05:55:18.016 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 05:55:18.017 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:55:18.058 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 05:55:18.226 +00:00 [INF] Token generated successfully.
2025-05-02 05:55:18.226 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 05:55:18.226 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 05:55:18.227 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 05:55:18.227 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 211.4021ms
2025-05-02 05:55:18.227 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 05:55:18.227 +00:00 [INF] HTTP POST /api/login responded 200 in 211.8303 ms
2025-05-02 05:55:18.227 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 212.0869ms
2025-05-02 05:55:22.752 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:55:22.752 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:55:22.752 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0769 ms
2025-05-02 05:55:22.752 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3030ms
2025-05-02 05:55:23.006 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:55:23.007 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:55:23.007 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:55:23.007 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:55:23.008 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:55:23.009 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:55:23.010 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:55:23.010 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.6803ms
2025-05-02 05:55:23.010 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:55:23.010 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.3430 ms
2025-05-02 05:55:23.010 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.6631ms
2025-05-02 05:58:19.897 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:58:19.897 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:58:19.897 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0864 ms
2025-05-02 05:58:19.897 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3086ms
2025-05-02 05:58:20.148 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:58:20.148 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:58:20.149 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:58:20.149 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:58:20.150 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:58:20.151 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:58:20.151 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:58:20.151 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2878ms
2025-05-02 05:58:20.151 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:58:20.151 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.0410 ms
2025-05-02 05:58:20.152 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.3123ms
2025-05-02 05:59:02.560 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:02.561 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:02.561 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.8680 ms
2025-05-02 05:59:02.562 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.1221ms
2025-05-02 05:59:02.810 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:02.810 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:02.811 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:02.811 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:59:02.812 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:59:02.813 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:59:02.813 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:59:02.813 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2639ms
2025-05-02 05:59:02.813 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:02.813 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.9109 ms
2025-05-02 05:59:02.813 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.1699ms
2025-05-02 05:59:07.573 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:07.574 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:07.574 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:07.574 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:59:07.575 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:59:07.576 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:59:07.576 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:59:07.576 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9772ms
2025-05-02 05:59:07.576 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:07.576 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5499 ms
2025-05-02 05:59:07.576 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9297ms
2025-05-02 05:59:15.690 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:15.691 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:15.691 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1167 ms
2025-05-02 05:59:15.691 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3941ms
2025-05-02 05:59:16.746 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:16.746 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:16.747 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:16.747 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:59:16.747 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:59:16.749 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:59:16.749 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:59:16.749 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.0722ms
2025-05-02 05:59:16.749 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:16.749 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6998 ms
2025-05-02 05:59:16.749 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9079ms
2025-05-02 05:59:43.060 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:43.060 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:43.061 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 1.0923 ms
2025-05-02 05:59:43.061 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.3523ms
2025-05-02 05:59:43.326 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 05:59:43.326 +00:00 [INF] CORS policy execution successful.
2025-05-02 05:59:43.327 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:43.328 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 05:59:43.329 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 05:59:43.331 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 05:59:43.332 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 05:59:43.332 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 4.3533ms
2025-05-02 05:59:43.332 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 05:59:43.332 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 5.9028 ms
2025-05-02 05:59:43.332 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 6.1779ms
2025-05-02 06:00:58.348 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:00:58.349 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:00:58.349 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0736 ms
2025-05-02 06:00:58.349 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.4437ms
2025-05-02 06:00:59.301 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:00:59.301 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:00:59.302 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:00:59.302 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:00:59.302 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:00:59.308 +00:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:00:59.308 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:00:59.308 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 6.514ms
2025-05-02 06:00:59.308 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:00:59.308 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 7.2000 ms
2025-05-02 06:00:59.308 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 7.3885ms
2025-05-02 06:05:04.691 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:05:04.691 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:05:04.691 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0580 ms
2025-05-02 06:05:04.692 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2354ms
2025-05-02 06:05:04.955 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:05:04.956 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:05:04.956 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:05:04.956 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:05:04.957 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:05:04.958 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:05:04.958 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:05:04.958 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8905ms
2025-05-02 06:05:04.958 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:05:04.958 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.4340 ms
2025-05-02 06:05:04.958 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.6211ms
2025-05-02 06:09:25.465 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:09:25.465 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:09:25.465 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0580 ms
2025-05-02 06:09:25.465 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3584ms
2025-05-02 06:09:25.730 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:09:25.730 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:09:25.730 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:09:25.730 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:09:25.731 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:09:25.732 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:09:25.733 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:09:25.733 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.3237ms
2025-05-02 06:09:25.733 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:09:25.733 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.8340 ms
2025-05-02 06:09:25.733 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.0771ms
2025-05-02 06:10:28.396 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:10:28.396 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:10:28.396 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0605 ms
2025-05-02 06:10:28.396 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2434ms
2025-05-02 06:10:28.643 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:10:28.643 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:10:28.643 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:10:28.643 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:10:28.644 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:10:28.645 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:10:28.645 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:10:28.645 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9755ms
2025-05-02 06:10:28.645 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:10:28.645 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5048 ms
2025-05-02 06:10:28.646 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.7126ms
2025-05-02 06:11:15.677 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:11:15.677 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:11:15.677 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0548 ms
2025-05-02 06:11:15.677 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2209ms
2025-05-02 06:11:15.928 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:11:15.928 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:11:15.929 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:11:15.929 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:11:15.929 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:11:15.930 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:11:15.931 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:11:15.931 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9938ms
2025-05-02 06:11:15.931 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:11:15.931 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5400 ms
2025-05-02 06:11:15.931 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.7522ms
2025-05-02 06:11:22.217 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:11:22.217 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:11:22.217 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0528 ms
2025-05-02 06:11:22.217 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2473ms
2025-05-02 06:11:22.474 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:11:22.474 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:11:22.475 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:11:22.475 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:11:22.475 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:11:22.476 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:11:22.476 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:11:22.477 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8279ms
2025-05-02 06:11:22.477 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:11:22.477 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.3417 ms
2025-05-02 06:11:22.477 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.6339ms
2025-05-02 06:15:17.570 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:15:17.571 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:15:17.571 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0585 ms
2025-05-02 06:15:17.571 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2428ms
2025-05-02 06:15:17.821 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:15:17.821 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:15:17.822 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:15:17.822 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:15:17.822 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:15:17.823 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:15:17.824 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:15:17.824 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.0252ms
2025-05-02 06:15:17.824 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:15:17.824 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6317 ms
2025-05-02 06:15:17.824 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8820ms
2025-05-02 06:16:18.019 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:16:18.019 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:16:18.019 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0795 ms
2025-05-02 06:16:18.019 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2509ms
2025-05-02 06:16:18.281 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:16:18.282 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:16:18.282 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:16:18.282 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:16:18.283 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:16:18.284 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:16:18.284 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:16:18.284 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.0984ms
2025-05-02 06:16:18.284 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:16:18.284 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6305 ms
2025-05-02 06:16:18.284 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8300ms
2025-05-02 06:19:22.423 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:19:22.423 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:19:22.423 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0594 ms
2025-05-02 06:19:22.423 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2416ms
2025-05-02 06:19:22.669 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:19:22.670 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:19:22.670 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:19:22.670 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:19:22.671 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:19:22.672 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:19:22.672 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:19:22.672 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.7952ms
2025-05-02 06:19:22.672 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:19:22.672 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.4312 ms
2025-05-02 06:19:22.672 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.6218ms
2025-05-02 06:23:51.132 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:23:51.132 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:23:51.132 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0586 ms
2025-05-02 06:23:51.132 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2521ms
2025-05-02 06:23:51.393 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:23:51.398 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:23:51.399 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:23:51.399 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:23:51.399 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:23:51.400 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:23:51.401 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:23:51.401 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1184ms
2025-05-02 06:23:51.401 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:23:51.401 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.7522 ms
2025-05-02 06:23:51.401 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 7.6766ms
2025-05-02 06:23:55.220 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:23:55.220 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:23:55.221 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:23:55.221 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:23:55.221 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:23:55.222 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:23:55.222 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:23:55.223 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8543ms
2025-05-02 06:23:55.223 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:23:55.223 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.3828 ms
2025-05-02 06:23:55.223 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.5829ms
2025-05-02 06:35:57.731 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:35:57.731 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:35:57.731 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0455 ms
2025-05-02 06:35:57.731 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2371ms
2025-05-02 06:35:57.979 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:35:57.979 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:35:57.979 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:35:57.980 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:35:57.980 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:35:58.035 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:35:58.035 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:35:58.036 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 56.0239ms
2025-05-02 06:35:58.036 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:35:58.036 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 56.5607 ms
2025-05-02 06:35:58.036 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 56.7405ms
2025-05-02 06:36:14.568 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:36:14.568 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:36:14.568 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0589 ms
2025-05-02 06:36:14.568 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2773ms
2025-05-02 06:36:15.543 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:36:15.543 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:36:15.543 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:36:15.543 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:36:15.545 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:36:15.546 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:36:15.546 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:36:15.546 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.9075ms
2025-05-02 06:36:15.546 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:36:15.546 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 3.5362 ms
2025-05-02 06:36:15.547 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.9584ms
2025-05-02 06:36:20.440 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:36:20.441 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:36:20.441 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0924 ms
2025-05-02 06:36:20.441 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.2311ms
2025-05-02 06:36:20.693 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:36:20.693 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:36:20.693 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:36:20.694 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:36:20.694 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:36:20.695 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:36:20.695 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:36:20.695 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.8749ms
2025-05-02 06:36:20.696 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:36:20.696 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.3884 ms
2025-05-02 06:36:20.696 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.5976ms
2025-05-02 06:41:04.004 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:41:04.004 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:41:04.004 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0840 ms
2025-05-02 06:41:04.004 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2649ms
2025-05-02 06:41:04.255 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:41:04.255 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:41:04.255 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:41:04.255 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:41:04.256 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:41:04.257 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:41:04.257 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:41:04.257 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.005ms
2025-05-02 06:41:04.257 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:41:04.257 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6207 ms
2025-05-02 06:41:04.257 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.8170ms
2025-05-02 06:45:34.927 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:45:34.927 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:45:34.927 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0493 ms
2025-05-02 06:45:34.927 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2263ms
2025-05-02 06:45:35.187 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:45:35.187 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:45:35.187 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:45:35.187 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:45:35.188 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:45:35.222 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:45:35.222 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:45:35.222 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 34.4622ms
2025-05-02 06:45:35.222 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:45:35.222 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 35.2150 ms
2025-05-02 06:45:35.222 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 35.3884ms
2025-05-02 06:49:51.597 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:49:51.597 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:49:51.597 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0421 ms
2025-05-02 06:49:51.597 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2110ms
2025-05-02 06:49:51.866 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 06:49:51.867 +00:00 [INF] CORS policy execution successful.
2025-05-02 06:49:51.867 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:49:51.867 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 06:49:51.867 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 06:49:51.868 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 06:49:51.869 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 06:49:51.869 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.7002ms
2025-05-02 06:49:51.869 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 06:49:51.869 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.1550 ms
2025-05-02 06:49:51.869 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.3301ms
2025-05-02 07:04:25.149 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 07:04:25.255 +00:00 [INF] Creating key {8ce49623-9482-44e7-a49c-c24bab31237d} with creation date 2025-05-02 07:04:25Z, activation date 2025-05-02 07:04:25Z, and expiration date 2025-07-31 07:04:25Z.
2025-05-02 07:04:25.265 +00:00 [WRN] No XML encryptor configured. Key {8ce49623-9482-44e7-a49c-c24bab31237d} may be persisted to storage in unencrypted form.
2025-05-02 07:04:25.268 +00:00 [INF] Writing data to file '/home/coder/.aspnet/DataProtection-Keys/key-8ce49623-9482-44e7-a49c-c24bab31237d.xml'.
2025-05-02 07:04:25.333 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 07:04:25.336 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 07:04:25.336 +00:00 [INF] Hosting environment: Development
2025-05-02 07:04:25.336 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 07:06:21.215 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:06:21.255 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 07:06:21.256 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:06:21.259 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 7.0670 ms
2025-05-02 07:06:21.265 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 53.8507ms
2025-05-02 07:06:21.524 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:06:21.540 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:06:21.811 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:06:21.822 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:06:21.826 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:06:21.831 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:06:21.831 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 290.5544 ms
2025-05-02 07:06:21.832 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 307.6826ms
2025-05-02 07:07:58.160 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:07:58.160 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:07:58.161 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.3497 ms
2025-05-02 07:07:58.161 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.1743ms
2025-05-02 07:07:58.409 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:07:58.409 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:07:58.411 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:07:58.412 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:07:58.412 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:07:58.412 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:07:58.412 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 2.8628 ms
2025-05-02 07:07:58.412 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 3.2416ms
2025-05-02 07:11:40.039 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:11:40.039 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:11:40.040 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 1.0328 ms
2025-05-02 07:11:40.040 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.3869ms
2025-05-02 07:11:40.293 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:11:40.293 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:11:40.294 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:11:40.294 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:11:40.295 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:11:40.295 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:11:40.295 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 1.8124 ms
2025-05-02 07:11:40.295 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 2.1302ms
2025-05-02 07:11:53.245 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:11:53.246 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:11:53.246 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0652 ms
2025-05-02 07:11:53.246 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3397ms
2025-05-02 07:11:53.505 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:11:53.505 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:11:53.506 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:11:53.506 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:11:53.506 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:11:53.506 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:11:53.506 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 0.8149 ms
2025-05-02 07:11:53.506 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 1.1524ms
2025-05-02 07:12:16.301 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:12:16.301 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:12:16.302 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 1.3494 ms
2025-05-02 07:12:16.302 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.6737ms
2025-05-02 07:12:16.574 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:12:16.574 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:12:16.575 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:12:16.575 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:12:16.575 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:12:16.575 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:12:16.575 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 0.8470 ms
2025-05-02 07:12:16.575 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 1.1265ms
2025-05-02 07:13:50.132 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:13:50.132 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:13:50.133 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 1.0773 ms
2025-05-02 07:13:50.133 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.3927ms
2025-05-02 07:13:50.399 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:13:50.400 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:13:50.400 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:13:50.400 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:13:50.400 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:13:50.400 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:13:50.400 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 0.7687 ms
2025-05-02 07:13:50.400 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 1.1323ms
2025-05-02 07:14:05.199 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:05.200 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:05.200 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1042 ms
2025-05-02 07:14:05.200 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3202ms
2025-05-02 07:14:05.452 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:05.452 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:05.452 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:14:05.452 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:14:05.452 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:14:05.452 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:14:05.452 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 0.7420 ms
2025-05-02 07:14:05.453 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 1.0053ms
2025-05-02 07:14:11.586 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:11.586 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:11.586 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0873 ms
2025-05-02 07:14:11.586 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3552ms
2025-05-02 07:14:11.835 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:11.835 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:11.835 +00:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2025-05-02 07:14:11.836 +00:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2025-05-02 07:14:11.836 +00:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Manager|Customer)
2025-05-02 07:14:11.836 +00:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-02 07:14:11.836 +00:00 [INF] HTTP GET /api/account/user/1006 responded 401 in 0.7140 ms
2025-05-02 07:14:11.836 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 401 0 - 0.9929ms
2025-05-02 07:14:38.889 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 07:14:38.889 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:38.889 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 0.0842 ms
2025-05-02 07:14:38.889 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 0.3131ms
2025-05-02 07:14:39.918 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 07:14:39.918 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:39.921 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 07:14:39.951 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 07:14:40.338 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 07:14:40.371 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 07:14:40.918 +00:00 [WRN] No store type was specified for the decimal property 'Balance' on entity type 'Account'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 07:14:40.918 +00:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Transaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 07:14:41.037 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:14:41.721 +00:00 [INF] Executed DbCommand (51ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 07:14:41.963 +00:00 [INF] Token generated successfully.
2025-05-02 07:14:41.983 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 07:14:41.983 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 07:14:41.986 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 07:14:42.011 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 2056.7512ms
2025-05-02 07:14:42.012 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 07:14:42.012 +00:00 [INF] HTTP POST /api/login responded 200 in 2094.2273 ms
2025-05-02 07:14:42.015 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 2097.3213ms
2025-05-02 07:14:44.385 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:44.385 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:44.386 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 1.0869 ms
2025-05-02 07:14:44.386 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.3422ms
2025-05-02 07:14:44.648 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:44.648 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:44.659 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:14:44.660 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:14:44.668 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:14:44.688 +00:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:14:44.708 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:14:44.728 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 67.2095ms
2025-05-02 07:14:44.728 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:14:44.728 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 80.0965 ms
2025-05-02 07:14:44.728 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 80.3762ms
2025-05-02 07:14:58.364 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:58.365 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:58.365 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0625 ms
2025-05-02 07:14:58.365 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2875ms
2025-05-02 07:14:58.614 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:14:58.614 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:14:58.615 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:14:58.615 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:14:58.660 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:14:58.663 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:14:58.664 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:14:58.664 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 48.9071ms
2025-05-02 07:14:58.664 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:14:58.664 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 49.5991 ms
2025-05-02 07:14:58.664 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 49.8182ms
2025-05-02 07:15:56.490 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:15:56.490 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:15:56.490 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0885 ms
2025-05-02 07:15:56.490 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3081ms
2025-05-02 07:15:56.745 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:15:56.745 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:15:56.745 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:15:56.745 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:15:56.748 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:15:56.749 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:15:56.749 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:15:56.749 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 3.955ms
2025-05-02 07:15:56.749 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:15:56.749 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 4.5598 ms
2025-05-02 07:15:56.749 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 4.7798ms
2025-05-02 07:16:12.353 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:16:12.353 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:16:12.353 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0833 ms
2025-05-02 07:16:12.353 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2891ms
2025-05-02 07:16:12.620 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:16:12.621 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:16:12.621 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:16:12.621 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:16:12.622 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:16:12.623 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:16:12.623 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:16:12.623 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2043ms
2025-05-02 07:16:12.623 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:16:12.623 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.7513 ms
2025-05-02 07:16:12.623 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9597ms
2025-05-02 07:17:01.418 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:17:01.419 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:17:01.419 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1037 ms
2025-05-02 07:17:01.419 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.5458ms
2025-05-02 07:17:01.690 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:17:01.690 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:17:01.690 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:17:01.690 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:17:01.691 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:17:01.692 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:17:01.692 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:17:01.693 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.0994ms
2025-05-02 07:17:01.693 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:17:01.693 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6773 ms
2025-05-02 07:17:01.693 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9066ms
2025-05-02 07:17:23.107 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:17:23.107 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:17:23.107 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0545 ms
2025-05-02 07:17:23.107 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2427ms
2025-05-02 07:17:23.357 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:17:23.357 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:17:23.358 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:17:23.358 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:17:23.359 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:17:23.360 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:17:23.360 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:17:23.360 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2416ms
2025-05-02 07:17:23.360 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:17:23.360 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.9403 ms
2025-05-02 07:17:23.360 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.1930ms
2025-05-02 07:25:42.607 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:25:42.607 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:25:42.607 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0975 ms
2025-05-02 07:25:42.607 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3889ms
2025-05-02 07:25:42.858 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:25:42.858 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:25:42.859 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:25:42.859 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:25:42.860 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:25:42.902 +00:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:25:42.902 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:25:42.902 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 43.2389ms
2025-05-02 07:25:42.902 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:25:42.902 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 43.9971 ms
2025-05-02 07:25:42.902 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 44.3224ms
2025-05-02 07:25:43.300 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:25:43.300 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:25:43.300 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:25:43.300 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:25:43.301 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:25:43.302 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:25:43.302 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:25:43.303 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2922ms
2025-05-02 07:25:43.303 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:25:43.303 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.9834 ms
2025-05-02 07:25:43.303 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.2573ms
2025-05-02 07:26:10.687 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:26:10.687 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:26:10.687 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0567 ms
2025-05-02 07:26:10.687 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2249ms
2025-05-02 07:26:10.935 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:26:10.935 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:26:10.935 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:26:10.935 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:26:10.936 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:26:10.937 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:26:10.937 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:26:10.938 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1431ms
2025-05-02 07:26:10.938 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:26:10.938 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.7367 ms
2025-05-02 07:26:10.938 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9224ms
2025-05-02 07:26:16.975 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:26:16.975 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:26:16.975 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0756 ms
2025-05-02 07:26:16.975 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2675ms
2025-05-02 07:26:17.230 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:26:17.230 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:26:17.231 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:26:17.231 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:26:17.232 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:26:17.232 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:26:17.233 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:26:17.233 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 1.9765ms
2025-05-02 07:26:17.233 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:26:17.233 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.5636 ms
2025-05-02 07:26:17.233 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.7496ms
2025-05-02 07:27:29.399 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:27:29.399 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:27:29.399 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0492 ms
2025-05-02 07:27:29.400 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2160ms
2025-05-02 07:27:29.652 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:27:29.652 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:27:29.653 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:27:29.653 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:27:29.654 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:27:29.655 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:27:29.655 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:27:29.655 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.2389ms
2025-05-02 07:27:29.655 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:27:29.655 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.9751 ms
2025-05-02 07:27:29.655 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.2268ms
2025-05-02 07:27:37.775 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:27:37.776 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:27:37.776 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0535 ms
2025-05-02 07:27:37.776 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2584ms
2025-05-02 07:27:38.039 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:27:38.039 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:27:38.040 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:27:38.040 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:27:38.040 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:27:38.041 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:27:38.042 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:27:38.042 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1313ms
2025-05-02 07:27:38.042 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:27:38.042 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.6848 ms
2025-05-02 07:27:38.042 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 2.9063ms
2025-05-02 07:28:30.193 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:28:30.193 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:28:30.193 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0503 ms
2025-05-02 07:28:30.193 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.2504ms
2025-05-02 07:28:30.444 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:28:30.444 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:28:30.445 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:28:30.445 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:28:30.446 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:28:30.447 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:28:30.447 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:28:30.447 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1227ms
2025-05-02 07:28:30.447 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:28:30.447 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.8849 ms
2025-05-02 07:28:30.447 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.0609ms
2025-05-02 07:31:07.131 +00:00 [INF] Application is shutting down...
2025-05-02 07:31:10.505 +00:00 [INF] User profile is available. Using '/home/coder/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-05-02 07:31:10.602 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-05-02 07:31:10.605 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-02 07:31:10.605 +00:00 [INF] Hosting environment: Development
2025-05-02 07:31:10.605 +00:00 [INF] Content root path: /home/coder/project/workspace/dotnetapp/
2025-05-02 07:31:44.540 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - -
2025-05-02 07:31:44.577 +00:00 [WRN] Failed to determine the https port for redirect.
2025-05-02 07:31:44.578 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:31:44.581 +00:00 [INF] HTTP OPTIONS /api/login responded 204 in 6.2387 ms
2025-05-02 07:31:44.587 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login - - - 204 - - 50.1859ms
2025-05-02 07:31:45.139 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57
2025-05-02 07:31:45.140 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:31:45.164 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 07:31:45.200 +00:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(dotnetapp.Models.LoginModel) on controller dotnetapp.Controllers.AuthenticationController (dotnetapp).
2025-05-02 07:31:45.394 +00:00 [INF] Login attempt for email: testforvinay@gmail.com
2025-05-02 07:31:45.398 +00:00 [INF] Login process started for email: testforvinay@gmail.com
2025-05-02 07:31:45.889 +00:00 [WRN] No store type was specified for the decimal property 'Balance' on entity type 'Account'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 07:31:45.890 +00:00 [WRN] No store type was specified for the decimal property 'Amount' on entity type 'Transaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-02 07:31:46.013 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:31:46.581 +00:00 [INF] Executed DbCommand (52ms) [Parameters=[@__model_Email_0='?' (Size = 254)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[Email], [u].[MobileNumber], [u].[Password], [u].[UserRole], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Email] = @__model_Email_0
2025-05-02 07:31:46.845 +00:00 [INF] Token generated successfully.
2025-05-02 07:31:46.917 +00:00 [INF] Login successful for email: testforvinay@gmail.com
2025-05-02 07:31:46.917 +00:00 [INF] Login successful for email: testforvinay@gmail.com. Token issued.
2025-05-02 07:31:46.921 +00:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-02 07:31:46.951 +00:00 [INF] Executed action dotnetapp.Controllers.AuthenticationController.Login (dotnetapp) in 1746.9599ms
2025-05-02 07:31:46.951 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AuthenticationController.Login (dotnetapp)'
2025-05-02 07:31:46.952 +00:00 [INF] HTTP POST /api/login responded 200 in 1812.3534 ms
2025-05-02 07:31:46.955 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/login application/json 57 - 200 - application/json;+charset=utf-8 1816.8984ms
2025-05-02 07:31:50.615 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:31:50.616 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:31:50.616 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.4647 ms
2025-05-02 07:31:50.616 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.3622ms
2025-05-02 07:31:50.878 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:31:50.885 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:31:50.934 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:31:50.936 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:31:50.943 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:31:50.957 +00:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:31:50.977 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:31:50.997 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 61.0257ms
2025-05-02 07:31:50.997 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:31:50.997 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 111.8870 ms
2025-05-02 07:31:50.997 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 118.8297ms
2025-05-02 07:32:37.726 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:32:37.726 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:32:37.726 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.1043 ms
2025-05-02 07:32:37.726 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3705ms
2025-05-02 07:32:40.282 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - -
2025-05-02 07:32:40.326 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/swagger/index.html - - - 200 - text/html;charset=utf-8 44.3577ms
2025-05-02 07:33:22.470 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:33:22.470 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:33:22.470 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.0900 ms
2025-05-02 07:33:22.470 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 0.3272ms
2025-05-02 07:33:22.720 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:33:22.721 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:33:22.723 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:22.723 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:33:22.773 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:33:22.777 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:33:22.777 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:33:22.777 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 54.1859ms
2025-05-02 07:33:22.777 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:22.777 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 56.8102 ms
2025-05-02 07:33:22.777 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 57.0725ms
2025-05-02 07:33:25.095 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:33:25.096 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:33:25.097 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:25.097 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:33:25.099 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:33:25.100 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:33:25.101 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:33:25.101 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 4.0859ms
2025-05-02 07:33:25.101 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:25.101 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 5.4058 ms
2025-05-02 07:33:25.101 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 5.7147ms
2025-05-02 07:33:28.040 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:33:28.040 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:33:28.041 +00:00 [INF] HTTP OPTIONS /api/account/user/1006 responded 204 in 0.9139 ms
2025-05-02 07:33:28.041 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 204 - - 1.1857ms
2025-05-02 07:33:28.292 +00:00 [INF] Request starting HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - -
2025-05-02 07:33:28.292 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:33:28.293 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:28.293 +00:00 [INF] Route matched with {action = "GetAccountsByUserId", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetAccountsByUserId(Int32) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:33:28.293 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:33:28.294 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:33:28.295 +00:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[dotnetapp.Models.Account, dotnetapp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-02 07:33:28.295 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp) in 2.1163ms
2025-05-02 07:33:28.295 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.GetAccountsByUserId (dotnetapp)'
2025-05-02 07:33:28.295 +00:00 [INF] HTTP GET /api/account/user/1006 responded 200 in 2.7600 ms
2025-05-02 07:33:28.295 +00:00 [INF] Request finished HTTP/1.1 GET http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account/user/1006 - - - 200 - application/json;+charset=utf-8 3.0041ms
2025-05-02 07:34:07.358 +00:00 [INF] Request starting HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account - -
2025-05-02 07:34:07.359 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:34:07.359 +00:00 [INF] HTTP OPTIONS /api/account responded 204 in 0.3363 ms
2025-05-02 07:34:07.359 +00:00 [INF] Request finished HTTP/1.1 OPTIONS http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account - - - 204 - - 0.6297ms
2025-05-02 07:34:07.838 +00:00 [INF] Request starting HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account application/json 159
2025-05-02 07:34:07.839 +00:00 [INF] CORS policy execution successful.
2025-05-02 07:34:07.839 +00:00 [INF] Executing endpoint 'dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp)'
2025-05-02 07:34:07.840 +00:00 [INF] Route matched with {action = "CreateAccount", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateAccount(dotnetapp.Models.Account) on controller dotnetapp.Controllers.AccountController (dotnetapp).
2025-05-02 07:34:07.849 +00:00 [INF] Entity Framework Core 6.0.0 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.0' with options: None
2025-05-02 07:34:07.851 +00:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AccountId], [a].[AccountHolderName], [a].[AccountType], [a].[Balance], [a].[DateCreated], [a].[LastUpdated], [a].[ProofOfIdentity], [a].[Status], [a].[UserId]
FROM [Accounts] AS [a]
WHERE [a].[UserId] = @__userId_0
2025-05-02 07:34:07.851 +00:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2025-05-02 07:34:07.851 +00:00 [INF] Executed action dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp) in 10.8889ms
2025-05-02 07:34:07.851 +00:00 [INF] Executed endpoint 'dotnetapp.Controllers.AccountController.CreateAccount (dotnetapp)'
2025-05-02 07:34:07.851 +00:00 [INF] HTTP POST /api/account responded 400 in 12.7190 ms
2025-05-02 07:34:07.851 +00:00 [INF] Request finished HTTP/1.1 POST http://8080-adbeaecaedadefcbfefdfaeebfcdfbcdeff.premiumproject.examly.io/api/account application/json 159 - 400 - text/plain;+charset=utf-8 13.0067ms
